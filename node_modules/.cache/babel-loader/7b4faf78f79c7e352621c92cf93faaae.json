{"ast":null,"code":"var _jsxFileName = \"/home/hadi/reactprojects/quizapp/Quizeapp/src/QuestionCard/Question_Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionCard = ({\n  question,\n  option,\n  callback\n}) => {\n  _s();\n\n  let [selectedAns, setSelectedAns] = useState(\"\");\n\n  const handelSelected = evt => {\n    setSelectedAns(evt.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: evt => callback(evt, selectedAns),\n      className: \"form_container\",\n      children: [option.map((opt, ind) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"opt\",\n              type: \"radio\",\n              required: true,\n              value: opt,\n              checked: selectedAns === opt,\n              onChange: handelSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 1\n            }, this), opt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 1\n          }, this)\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionCard, \"rd0iE4iso0CnwAwhhorqj4QJsNk=\");\n\n_c = QuestionCard;\nexport default QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["/home/hadi/reactprojects/quizapp/Quizeapp/src/QuestionCard/Question_Card.tsx"],"names":["React","useState","QuestionCard","question","option","callback","selectedAns","setSelectedAns","handelSelected","evt","target","value","map","opt","ind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGC,MAAMC,YAAyC,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAkC;AAAA;;AAGrF,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMO,cAAc,GAAIC,GAAD,IAAY;AAG/BF,IAAAA,cAAc,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAd;AACH,GAJD;;AAMI,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BAER;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACA;AAAA,kBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFQ,eAMR;AAAM,MAAA,QAAQ,EAAGM,GAAD,IAAqCJ,QAAQ,CAACI,GAAD,EAAMH,WAAN,CAA7D;AAAiF,MAAA,SAAS,EAAC,gBAA3F;AAAA,iBAGAF,MAAM,CAACQ,GAAP,CAAW,CAACC,GAAD,EAAcC,GAAd,KAA4B;AAGnC,4BACI;AAAA,iCACR;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA,oCAEA;AAAO,cAAA,IAAI,EAAC,KAAZ;AACC,cAAA,IAAI,EAAC,OADN;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,KAAK,EAAED,GAHT;AAIE,cAAA,OAAO,EAAEP,WAAW,KAAKO,GAJ3B;AAKE,cAAA,QAAQ,EAAEL;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFA,EASGK,GATH;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ,WAAUC,GAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAgBH,OAnBD,CAHA,eA0BA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cA1BA;AAAA;AAAA;AAAA;AAAA;AAAA,YANQ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CAjDA;;GAAMZ,Y;;KAAAA,Y;AAkDP,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { QuestionPropstype } from \"./../QuizType/quiz_type\";\r\n\r\n const QuestionCard: React.FC<QuestionPropstype> = ({question , option, callback}) =>{\r\n\r\n\r\nlet [selectedAns, setSelectedAns] = useState(\"\");\r\n\r\nconst handelSelected = (evt: any)=>{\r\n\r\n\r\n    setSelectedAns(evt.target.value)\r\n}\r\n\r\n    return(\r\n        <div className=\"question_container\">\r\n\r\n<div className=\"question\">\r\n<h4>{question}</h4>\r\n</div>\r\n\r\n<form onSubmit={(evt: React.FormEvent<EventTarget>)=>callback(evt, selectedAns)} className=\"form_container\">\r\n\r\n    {\r\noption.map((opt: string, ind: number)=>{\r\n\r\n\r\n    return ( \r\n        <div key={ind}>\r\n<label className=\"radio\">\r\n\r\n<input name=\"opt\"\r\n type=\"radio\"\r\n  required \r\n  value={opt}\r\n  checked={selectedAns === opt}\r\n  onChange={handelSelected}\r\n  />\r\n  {opt}\r\n</label>\r\n            \r\n        </div>\r\n    )\r\n})\r\n    \r\n\r\n}\r\n<input type=\"submit\" className=\"submit\"/>\r\n</form>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default QuestionCard"]},"metadata":{},"sourceType":"module"}